{"ast":null,"code":"var _jsxFileName = \"/Users/hayashiryuunosuke/Public/workspace/chatbot-demo/src/App.jsx\";\nimport React from 'react';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from './components/index';\nimport defaultDataset from './dataset';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayNextQuestion = nextQuestionId => {\n      setTimeout(1000);\n      const chats = this.state.chats;\n      const dataset = this.state.dataset[nextQuestionId];\n      chats.push({\n        text: dataset.question,\n        type: \"question\"\n      });\n      this.setState({\n        chats: chats,\n        answers: dataset.answers,\n        currentId: nextQuestionId\n      });\n    };\n\n    this.selectAnswer = (selectedAnswer, nextQuestionId) => {\n      switch (true) {\n        case nextQuestionId === \"init\":\n          this.displayNextQuestion(nextQuestionId);\n          break;\n\n        default:\n          const chats = this.state.chats;\n          chats.push({\n            text: selectedAnswer,\n            type: \"answer\"\n          });\n          this.setState({\n            chats: chats\n          });\n          this.displayNextQuestion(nextQuestionId);\n          break;\n      }\n    };\n\n    this.state = {\n      chats: [],\n      answers: [],\n      currentId: \"init\",\n      dataset: defaultDataset\n    };\n    this.selectAnswer = this.selectAnswer.bind(this);\n  }\n\n  componentDidMount() {\n    const initAnswer = \"\";\n    this.selectAnswer(initAnswer, this.state.currentId);\n  }\n\n  componentDidUpdate() {\n    const scrollArea = document.getElementById('scroll-area');\n\n    if (scrollArea) {\n      scrollArea.scrollTop = scrollArea.scrollHeight;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      select: this.selectAnswer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/hayashiryuunosuke/Public/workspace/chatbot-demo/src/App.jsx"],"names":["React","AnswersList","Chats","defaultDataset","App","Component","constructor","props","displayNextQuestion","nextQuestionId","setTimeout","chats","state","dataset","push","text","question","type","setState","answers","currentId","selectAnswer","selectedAnswer","bind","componentDidMount","initAnswer","componentDidUpdate","scrollArea","document","getElementById","scrollTop","scrollHeight","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,2BAAP;AACA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,oBAAjC;AACA,OAAOC,cAAP,MAA2B,WAA3B;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAiC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAWlBC,mBAXkB,GAWGC,cAAD,IAAkB;AACpCC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACA,YAAME,OAAO,GAAG,KAAKD,KAAL,CAAWC,OAAX,CAAmBJ,cAAnB,CAAhB;AACAE,MAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,QAAAA,IAAI,EAACF,OAAO,CAACG,QADJ;AAETC,QAAAA,IAAI,EAAC;AAFI,OAAX;AAIA,WAAKC,QAAL,CAAc;AACZP,QAAAA,KAAK,EAACA,KADM;AAEZQ,QAAAA,OAAO,EAACN,OAAO,CAACM,OAFJ;AAGZC,QAAAA,SAAS,EAACX;AAHE,OAAd;AAKD,KAxBiB;;AAAA,SA0BlBY,YA1BkB,GA0BL,CAACC,cAAD,EAAgBb,cAAhB,KAAiC;AAC5C,cAAO,IAAP;AACE,aAAMA,cAAc,KAAG,MAAvB;AACE,eAAKD,mBAAL,CAAyBC,cAAzB;AACA;;AACF;AACE,gBAAME,KAAK,GAAG,KAAKC,KAAL,CAAWD,KAAzB;AACAA,UAAAA,KAAK,CAACG,IAAN,CAAW;AACTC,YAAAA,IAAI,EAACO,cADI;AAETL,YAAAA,IAAI,EAAC;AAFI,WAAX;AAIA,eAAKC,QAAL,CAAc;AACZP,YAAAA,KAAK,EAACA;AADM,WAAd;AAGA,eAAKH,mBAAL,CAAyBC,cAAzB;AACA;AAdJ;AAgBD,KA3CiB;;AAEhB,SAAKG,KAAL,GAAW;AACTD,MAAAA,KAAK,EAAC,EADG;AAETQ,MAAAA,OAAO,EAAC,EAFC;AAGTC,MAAAA,SAAS,EAAC,MAHD;AAITP,MAAAA,OAAO,EAACV;AAJC,KAAX;AAMA,SAAKkB,YAAL,GAAkB,KAAKA,YAAL,CAAkBE,IAAlB,CAAuB,IAAvB,CAAlB;AACD;;AAoCDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,UAAU,GAAG,EAAnB;AACA,SAAKJ,YAAL,CAAkBI,UAAlB,EAA6B,KAAKb,KAAL,CAAWQ,SAAxC;AACD;;AAEDM,EAAAA,kBAAkB,GAAE;AAClB,UAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,aAAxB,CAAnB;;AACA,QAAGF,UAAH,EAAc;AACZA,MAAAA,UAAU,CAACG,SAAX,GAAqBH,UAAU,CAACI,YAAhC;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAS,MAAA,SAAS,EAAC,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWD,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,WAAD;AAAa,MAAA,OAAO,EAAE,KAAKC,KAAL,CAAWO,OAAjC;AAA0C,MAAA,MAAM,EAAE,KAAKE,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADF;AAQD;;AAnE6C;AAoE/C","sourcesContent":["import React from 'react';\nimport './assets/styles/style.css'\nimport {AnswersList, Chats} from './components/index'\nimport defaultDataset from './dataset'\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      chats:[],\n      answers:[],\n      currentId:\"init\",\n      dataset:defaultDataset\n    }\n    this.selectAnswer=this.selectAnswer.bind(this);\n  }\n\n  displayNextQuestion=(nextQuestionId)=>{\n    setTimeout(1000)\n    const chats = this.state.chats\n    const dataset = this.state.dataset[nextQuestionId]\n    chats.push({\n      text:dataset.question,\n      type:\"question\"\n    })    \n    this.setState({\n      chats:chats,\n      answers:dataset.answers,\n      currentId:nextQuestionId\n    })\n  }\n\n  selectAnswer=(selectedAnswer,nextQuestionId)=>{\n    switch(true){\n      case (nextQuestionId===\"init\"):\n        this.displayNextQuestion(nextQuestionId);\n        break;\n      default:\n        const chats = this.state.chats\n        chats.push({\n          text:selectedAnswer,\n          type:\"answer\"\n        })\n        this.setState({\n          chats:chats\n        })\n        this.displayNextQuestion(nextQuestionId);\n        break;\n      }\n  }\n\n  componentDidMount(){\n    const initAnswer = \"\"\n    this.selectAnswer(initAnswer,this.state.currentId);\n  }\n\n  componentDidUpdate(){\n    const scrollArea = document.getElementById('scroll-area');\n    if(scrollArea){\n      scrollArea.scrollTop=scrollArea.scrollHeight;\n    }\n  }\n\n  render(){\n    return(\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers} select={this.selectAnswer}/>\n        </div>\n      </section>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}