{"ast":null,"code":"var _jsxFileName = \"/Users/hayashiryuunosuke/Public/workspace/chatbot-demo/src/App.jsx\";\nimport React from 'react';\nimport './assets/styles/style.css';\nimport { AnswersList, Chats } from './components/index';\nimport defaultDataset from './dataset';\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.displayNextQuestion = nextQuestionId => {\n      const chats = this.state.chats;\n      const dataset = this.state.dataset[nextQuestionId];\n      chats.push({\n        text: dataset.question,\n        type: \"question\"\n      });\n      this.setState({\n        chats: chats,\n        currentId: nextQuestionId\n      });\n    };\n\n    this.selectAnswer = (nextQuestionId, selectAnswer) => {\n      switch (true) {\n        case nextQuestionId = \"init\":\n          break;\n\n        default:\n          const chats = this.state.chats;\n          chats.push({\n            text: selectAnswer,\n            type: \"answer\"\n          });\n          this.setState({\n            chats: chats\n          });\n          displayNextQuestion(nextQuestionId);\n      }\n    };\n\n    this.state = {\n      chats: [],\n      answers: [],\n      currentId: \"init\",\n      dataset: defaultDataset\n    };\n  }\n\n  initChat() {\n    const initialDataset = this.state.dataset[this.state.currentId];\n    const initialQuestion = initialDataset.question;\n    const chat = {\n      text: initialQuestion,\n      type: \"question\"\n    };\n    const chats = this.state.chats;\n    chats.push(chat);\n    this.setState({\n      chats: chats\n    });\n  }\n\n  initAnswer() {\n    const initialDataset = this.state.dataset[this.state.currentId];\n    const initialAnswer = initialDataset.answers;\n    this.setState({\n      answers: initialAnswer\n    });\n  }\n\n  componentDidMount() {\n    this.initChat();\n    this.initAnswer();\n    this.selectAnswer();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"c-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"c-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Chats, {\n      chats: this.state.chats,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(AnswersList, {\n      answers: this.state.answers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n;","map":{"version":3,"sources":["/Users/hayashiryuunosuke/Public/workspace/chatbot-demo/src/App.jsx"],"names":["React","AnswersList","Chats","defaultDataset","App","Component","constructor","props","displayNextQuestion","nextQuestionId","chats","state","dataset","push","text","question","type","setState","currentId","selectAnswer","answers","initChat","initialDataset","initialQuestion","chat","initAnswer","initialAnswer","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './assets/styles/style.css'\nimport {AnswersList, Chats} from './components/index'\nimport defaultDataset from './dataset'\n\nexport default class App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state={\n      chats:[],\n      answers:[],\n      currentId:\"init\",\n      dataset:defaultDataset\n    }\n  }\n\n  displayNextQuestion=(nextQuestionId)=>{\n    const chats = this.state.chats\n    const dataset = this.state.dataset[nextQuestionId]\n    chats.push({\n      text:dataset.question,\n      type:\"question\"\n    })    \n    this.setState({\n      chats:chats,\n      currentId:nextQuestionId\n    })\n  }\n\n  selectAnswer=(nextQuestionId,selectAnswer)=>{\n    switch(true){\n      case (nextQuestionId=\"init\"):\n        break;\n      default:\n        const chats = this.state.chats\n        chats.push({\n          text:selectAnswer,\n          type:\"answer\"\n        })\n        this.setState({\n          chats:chats\n        })\n        displayNextQuestion(nextQuestionId);\n      }\n  }\n\n  initChat(){\n    const initialDataset = this.state.dataset[this.state.currentId]\n    const initialQuestion = initialDataset.question\n    const chat = {\n      text:initialQuestion,\n      type:\"question\"\n    }\n    const chats = this.state.chats\n    chats.push(chat)\n    this.setState({\n      chats:chats\n    })\n  }\n\n  initAnswer(){\n    const initialDataset = this.state.dataset[this.state.currentId]\n    const initialAnswer = initialDataset.answers\n    this.setState({\n      answers:initialAnswer\n    })\n  }\n\n  componentDidMount(){\n    this.initChat();\n    this.initAnswer();\n    this.selectAnswer();\n  }\n\n  render(){\n    return(\n      <section className=\"c-section\">\n        <div className=\"c-box\">\n          <Chats chats={this.state.chats} />\n          <AnswersList answers={this.state.answers}/>\n        </div>\n      </section>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}